@model IEnumerable<ReviewAggregatorWebApp.Model.Movie>
@{
    var filterType = Context.Request.Query["filterType"];
    var filterValue = Context.Request.Query["filterValue"];
    var sortOrder = ViewBag.SortOrder;
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>

<h1>@ViewBag.FilterTitle</h1>

<div class="form-group">
    <label for="sortOptions">Сортировать по:</label>
    <select id="sortOptions" class="form-control" onchange="location = this.value;">
        <option value="@Url.Action("Filter", new { filterType = filterType, filterValue = filterValue, sortBy = "rating" })" @(sortOrder == "rating" ? "selected" : "")>По рейтингу</option>
        <option value="@Url.Action("Filter", new { filterType = filterType, filterValue = filterValue, sortBy = "date" })" @(sortOrder == "date" ? "selected" : "")>По дате</option>
    </select>
</div>

@if (Model != null && Model.Any())
{
    <ul>
        @foreach (var movie in Model)
        {
            <li>
                <strong>
                    <a href="@Url.Action("Details", "MovieInfo", new { id = movie.Id })">
                        @movie.Name
                    </a>
                </strong> - @(movie.ReleaseDate.Year.ToString())
                <br />
                Жанры: @string.Join(", ", movie.Genres?.Select(g => g.Name) ?? new List<string> { "-" })
                <br />
                Режиссер: @(movie.Director?.Name ?? "–")
                <br />
                Страны: @string.Join(", ", movie.Countries?.Select(c => c.Name) ?? new List<string> { "-" })
            </li>
        }
    </ul>
}
else
{
    <p>Фильмы не найдены.</p>
}