Вот классы модели:
using System;
using System.Collections.Generic;

namespace ReviewAggregatorWebApp.Model;
public partial class Movie
{
    public int Id { get; set; }

    public string Name { get; set; } = null!;

    public string PosterLink { get; set; } = null!;

    public int DirectorId { get; set; }

    public DateTime ReleaseDate { get; set; }

    public decimal Rating { get; set; }

    public virtual Director Director { get; set; } = null!;

    public byte[]? Poster { get; set; }

    public virtual ICollection<Review> Reviews { get; set; } = new List<Review>();

    public virtual ICollection<Country> Countries { get; set; } = new List<Country>();

    public virtual ICollection<Genre> Genres { get; set; } = new List<Genre>();

    public override string ToString()
    {
        string Genres = string.Join(", ", this.Genres.Select(obj => obj.ToString()));
        string Countries = string.Join(", ", this.Countries.Select(obj => obj.ToString()));
        return $"{Name}: released in {ReleaseDate}, by director: {Director}, has rating: {Rating}. Genres: {Genres}. Countries of action: {Countries}";
    }
}

using System;
using System.Collections.Generic;

namespace ReviewAggregatorWebApp.Model;

public partial class Director
{
    public int Id { get; set; }

    public string Name { get; set; } = null!;

    public virtual ICollection<Movie> Movies { get; set; } = new List<Movie>();

    public override string ToString()
    {
        return $"{Name}";
    }
}


using System;
using System.Collections.Generic;

namespace ReviewAggregatorWebApp.Model;

public partial class Genre
{
    public int Id { get; set; }

    public string Name { get; set; } = null!;

    public virtual ICollection<Movie> Movies { get; set; } = new List<Movie>();

    public override string ToString()
    {
        return $"{Name}";
    }
}

using System;
using System.Collections.Generic;

namespace ReviewAggregatorWebApp.Model;

public partial class Country
{
    public int Id { get; set; }

    public string Name { get; set; } = null!;

    public virtual ICollection<Movie> Movies { get; set; } = new List<Movie>();

    public override string ToString()
    {
        return $"{Name}";
    }
}

Классы репозитория:
using ReviewAggregatorWebApp.Interfaces;
using ReviewAggregatorWebApp.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ReviewAggregatorWebApp.Repository
{
    public class CountryRepository : IAllCountries
    {
        private readonly Db8428Context _context;
        public CountryRepository(Db8428Context context)
        {
            _context = context;
        }

        public IEnumerable<Country> AllCountries => _context.Countries;

        public Country GetById(int id) => _context.Countries.Find(id)
            ?? throw new InvalidOperationException($"Country with ID {id} not found.");

        public void Create(Country country)
        {
            _context.Countries.Add(country);
            _context.SaveChanges();
        }

        public void Update(Country country)
        {
            _context.Countries.Update(country);
            _context.SaveChanges();
        }

        public void Delete(int id)
        {
            var country = GetById(id);
            _context.Countries.Remove(country);
            _context.SaveChanges();
        }
    }
}

using ReviewAggregatorWebApp.Interfaces;
using ReviewAggregatorWebApp.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ReviewAggregatorWebApp.Repository
{
    public class GenreRepository : IAllGenres
    {
        private readonly Db8428Context _context;
        public GenreRepository(Db8428Context context)
        {
            _context = context;
        }

        public IEnumerable<Genre> AllGenres => _context.Genres;

        public Genre GetById(int id) => _context.Genres.Find(id)
            ?? throw new InvalidOperationException($"Genre with ID {id} not found.");

        public void Create(Genre genre)
        {
            _context.Genres.Add(genre);
            _context.SaveChanges();
        }

        public void Update(Genre genre)
        {
            _context.Genres.Update(genre);
            _context.SaveChanges();
        }

        public void Delete(int id)
        {
            var genre = GetById(id);
            _context.Genres.Remove(genre);
            _context.SaveChanges();
        }
    }
}

using ReviewAggregatorWebApp.Interfaces;
using ReviewAggregatorWebApp.Model;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ReviewAggregatorWebApp.Repository
{
    public class MovieRepository : IAllMovies
    {
        private readonly Db8428Context _context;
        public MovieRepository(Db8428Context context)
        {
            _context = context;
        }

        public IEnumerable<Movie> AllMovies => _context.Movies
            .Include(x => x.Director)
            .Include(x => x.Genres)
            .Include(x => x.Countries);

        public Movie GetById(int id) => _context.Movies
            .Include(x => x.Director)
            .Include(x => x.Genres)
            .Include(x => x.Countries)
            .FirstOrDefault(x => x.Id == id) ??
                throw new InvalidOperationException($"Movie with ID {id} not found.");

        public void Create(Movie movie)
        {
            _context.Movies.Add(movie);
            _context.SaveChanges();
        }

        public void Update(Movie movie)
        {
            _context.Movies.Update(movie);
            _context.SaveChanges();
        }

        public void Delete(int id)
        {
            var movie = GetById(id);
            _context.Movies.Remove(movie);
            _context.SaveChanges();
        }
    }
}


using ReviewAggregatorWebApp.Interfaces;
using ReviewAggregatorWebApp.Model;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ReviewAggregatorWebApp.Repository
{
    public class DirectorRepository : IAllDirectors
    {
        private readonly Db8428Context _context;
        public DirectorRepository(Db8428Context context)
        {
            _context = context;
        }

        public IEnumerable<Director> AllDirectors => _context.Directors;

        public Director GetById(int id) => _context.Directors.Find(id)
            ?? throw new InvalidOperationException($"Director with ID {id} not found.");

        public void Create(Director director)
        {
            _context.Directors.Add(director);
            _context.SaveChanges();
        }

        public void Update(Director director)
        {
            _context.Directors.Update(director);
            _context.SaveChanges();
        }

        public void Delete(int id)
        {
            var director = GetById(id);
            _context.Directors.Remove(director);
            _context.SaveChanges();
        }
    }
}

А так же код класса Program:

var builder = WebApplication.CreateBuilder(args);

// Подключение сервисов
builder.Services.AddDbContext<Db8428Context>(options =>
    options.UseSqlServer(builder.Configuration.GetConnectionString("RemoteConnection")));
builder.Services.AddTransient<IAllUsers, UserRepository>();
builder.Services.AddTransient<IAllDirectors, DirectorRepository>();
builder.Services.AddTransient<IAllGenres, GenreRepository>();
builder.Services.AddTransient<IAllCountries, CountryRepository>();
builder.Services.AddTransient<IAllMovies, MovieRepository>();
builder.Services.AddTransient<IAllReviews, ReviewRepository>();
builder.Services.AddDistributedMemoryCache();
builder.Services.AddMemoryCache();
builder.Services.AddSession(); // Добавляем поддержку сессий

var app = builder.Build();



Напиши инициализатор бд, который вызывает этот запрос:
{url}/v1.4/movie?year=2020&genres.name=криминал&limit=50

Извлекает из результатов id фильмов. Вот пример ответа, который возвращает api на этот url:
{
    "docs": [
        {
            "id": 5197060,
            "name": null,
            "alternativeName": "Spoku vilciens (theater performance)",
            "enName": null,
            "type": "movie",
            "typeNumber": 1,
            "year": 2020,
            "description": null,
            "shortDescription": null,
            "status": null,
            "rating": {
                "kp": 0,
                "imdb": 0,
                "filmCritics": 0,
                "russianFilmCritics": 0,
                "await": 0
            },
            "votes": {
                "kp": 0,
                "imdb": 0,
                "filmCritics": 0,
                "russianFilmCritics": 0,
                "await": 0
            },
            "movieLength": 73,
            "totalSeriesLength": null,
            "seriesLength": null,
            "ratingMpaa": null,
            "ageRating": null,
            "genres": [
                {
                    "name": "криминал"
                }
            ],
            "countries": [
                {
                    "name": "Латвия"
                }
            ],
            "top10": null,
            "top250": null,
            "isSeries": false,
            "ticketsOnSale": false
        },
        {
            "id": 1341532,
            "name": "Убийство по-итальянски",
            "alternativeName": "Il delitto Mattarella",
            "enName": null,
            "names": [],
            "type": "movie",
            "typeNumber": 1,
            "year": 2020,
            "description": "Убийца хладнокровно расстреливает главу сицилийского региона Пьерсанти Маттарелла. Изначально это убийство классифицируется как теракт. Но чем дальше заходит расследование этого преступления, тем запутаннее оно становится. Представленные детали и шокирующие факты заставляют всех посмотреть на происходящие события совершенно с иной стороны.",
            "shortDescription": "Смерть политика приводит к шокирующим открытиям. Детективная драма о сицилийской мафии по реальным событиям",
            "status": null,
            "rating": {
                "kp": 5.901,
                "imdb": 5.8,
                "filmCritics": 0,
                "russianFilmCritics": 0,
                "await": null
            },
            "votes": {
                "kp": 305,
                "imdb": 119,
                "filmCritics": 0,
                "russianFilmCritics": 0,
                "await": 0
            },
            "movieLength": 97,
            "totalSeriesLength": null,
            "seriesLength": null,
            "ratingMpaa": null,
            "ageRating": 18,
            "poster": {
                "url": "https://image.openmoviedb.com/kinopoisk-images/6201401/9ee87cfe-aac7-4098-976f-d787b7e26938/orig",
                "previewUrl": "https://image.openmoviedb.com/kinopoisk-images/6201401/9ee87cfe-aac7-4098-976f-d787b7e26938/x1000"
            },
            "backdrop": {
                "url": "https://image.openmoviedb.com/kinopoisk-ott-images/1672343/2a0000017fdff444af97e211f004024c4e39/orig",
                "previewUrl": "https://image.openmoviedb.com/kinopoisk-ott-images/1672343/2a0000017fdff444af97e211f004024c4e39/x1000"
            },
            "genres": [
                {
                    "name": "драма"
                },
                {
                    "name": "криминал"
                },
                {
                    "name": "история"
                }
            ],
            "countries": [
                {
                    "name": "Италия"
                }
            ],
            "top10": null,
            "top250": null,
            "isSeries": false,
            "ticketsOnSale": false,
            "logo": {
                "url": "https://image.openmoviedb.com/tmdb-images/original/lSgSaB7dsHRBwdHvZNdRBfaYtIH.png",
                "previewUrl": "https://image.openmoviedb.com/tmdb-images/w500/lSgSaB7dsHRBwdHvZNdRBfaYtIH.png"
            }
        }
    ],
    "total": 1875,
    "limit": 50,
    "page": 1,
    "pages": 38
}

Если у фильма пустое поле 'name' его нужно проигнорировать и пропустить

Далее, каждый из id в полученном массиве id фильмов нужно добавить в url: {url}/v1.4/movie/{movieId}
Ответ api выглядит примерно так:
{
    "id": 1341532,
    "externalId": {
        "kpHD": "4b9259859d3436f9ae2d56e678cf18cf",
        "imdb": "tt11597086",
        "tmdb": 671940
    },
    "name": "Убийство по-итальянски",
    "alternativeName": "Il delitto Mattarella",
    "enName": null,
    "names": [],
    "type": "movie",
    "typeNumber": 1,
    "year": 2020,
    "description": "Убийца хладнокровно расстреливает главу сицилийского региона Пьерсанти Маттарелла. Изначально это убийство классифицируется как теракт. Но чем дальше заходит расследование этого преступления, тем запутаннее оно становится. Представленные детали и шокирующие факты заставляют всех посмотреть на происходящие события совершенно с иной стороны.",
    "shortDescription": "Смерть политика приводит к шокирующим открытиям. Детективная драма о сицилийской мафии по реальным событиям",
    "slogan": null,
    "status": null,
    "rating": {
        "kp": 5.901,
        "imdb": 5.8,
        "filmCritics": 0,
        "russianFilmCritics": 0,
        "await": null
    },
    "votes": {
        "kp": 305,
        "imdb": 119,
        "filmCritics": 0,
        "russianFilmCritics": 0,
        "await": 0
    },
    "movieLength": 97,
    "totalSeriesLength": null,
    "seriesLength": null,
    "ratingMpaa": null,
    "ageRating": 18,
    "poster": {
        "url": "https://image.openmoviedb.com/kinopoisk-images/6201401/9ee87cfe-aac7-4098-976f-d787b7e26938/orig",
        "previewUrl": "https://image.openmoviedb.com/kinopoisk-images/6201401/9ee87cfe-aac7-4098-976f-d787b7e26938/x1000"
    },
    "backdrop": {
        "url": "https://image.openmoviedb.com/kinopoisk-ott-images/1672343/2a0000017fdff444af97e211f004024c4e39/orig",
        "previewUrl": "https://image.openmoviedb.com/kinopoisk-ott-images/1672343/2a0000017fdff444af97e211f004024c4e39/x1000"
    },
    "genres": [
        {
            "name": "драма"
        },
        {
            "name": "криминал"
        },
        {
            "name": "история"
        }
    ],
    "countries": [
        {
            "name": "Италия"
        }
    ],
    "persons": [
        {
            "id": 56068,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_56068.jpg",
            "name": "Клаудио Кастроджиованни",
            "enName": "Claudio Castrogiovanni",
            "description": "Pio La Torre",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 4036722,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_4036722.jpg",
            "name": "Никасио Катанезе",
            "enName": "Nicasio Catanese",
            "description": "Bernardo Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 467149,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_467149.jpg",
            "name": "Давид Коко",
            "enName": "David Coco",
            "description": "Piersanti Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 396815,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_396815.jpg",
            "name": "Франческо Ди Лева",
            "enName": "Francesco Di Leva",
            "description": "Massimo M",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 416272,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_416272.jpg",
            "name": "Донателла Финокьяро",
            "enName": "Donatella Finocchiaro",
            "description": "Irma Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 2665011,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_2665011.jpg",
            "name": "Иван Джамбиртоне",
            "enName": "Ivan Giambirtone",
            "description": "Giovanni Falcone",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 19176,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_19176.jpg",
            "name": "Лео Гульотта",
            "enName": "Leo Gullotta",
            "description": "Rosario Nicoletti",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 2844157,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_2844157.jpg",
            "name": "Франческо Ла Мантия",
            "enName": "Francesco La Mantia",
            "description": "Sergio Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 5807850,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5807850.jpg",
            "name": "Витторио Магаццу Тамбурелло",
            "enName": "Vittorio Magazzù Tamburello",
            "description": "Aurelio",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 125144,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_125144.jpg",
            "name": "Тони Сперандео",
            "enName": "Tony Sperandeo",
            "description": "Vito Ciancimino",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 185275,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_185275.jpg",
            "name": "Туччо Мусумечи",
            "enName": "Tuccio Musumeci",
            "description": null,
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 291279,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_291279.jpg",
            "name": "Антонио Альвеарио",
            "enName": "Antonio Alveario",
            "description": "Segretario Generale",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 5945944,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5945944.jpg",
            "name": "Лолло Франко",
            "enName": "Lollo Franco",
            "description": "Michele Sindona",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 29465,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_29465.jpg",
            "name": "Андреа Тидона",
            "enName": "Andrea Tidona",
            "description": "Ispettore Mignosi",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 249349,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_249349.jpg",
            "name": "Серджо Фришия",
            "enName": "Sergio Friscia",
            "description": "Rosario Spatola",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 269987,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_269987.jpg",
            "name": "Винченцо Кривелло",
            "enName": "Vincenzo Crivello",
            "description": "Filippo Calcaterra",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 232478,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_232478.jpg",
            "name": "Гуя Йело",
            "enName": "Guia Jelo",
            "description": "Moglie Nicoletti",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 139555,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_139555.jpg",
            "name": "Анджело Тосто",
            "enName": "Angelo Tosto",
            "description": "Mariro D'Acquisto",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 6386637,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_6386637.jpg",
            "name": "Умберто Кантоне",
            "enName": "Umberto Cantone",
            "description": "Giulio Andreotti",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 5269509,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5269509.jpg",
            "name": "Маттео Контино",
            "enName": "Matteo Contino",
            "description": "Pietro Grasso",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 592690,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_592690.jpg",
            "name": "Луиджи Бонанно",
            "enName": "Luigi Bonanno",
            "description": "Giovanni Gioia",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 1297438,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_1297438.jpg",
            "name": "Стефания Бландебурго",
            "enName": "Stefania Blandeburgo",
            "description": "La segretaria di Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 6757396,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_6757396.jpg",
            "name": "Анджело Фарачи",
            "enName": "Angelo Faraci",
            "description": "Sindacalista",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 5892065,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5892065.jpg",
            "name": "Антонио Макалузо",
            "enName": "Antonino Macaluso",
            "description": "Capogruppo Movimento Sociale Italiano",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 2826506,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_2826506.jpg",
            "name": "Пьетро Паче",
            "enName": "Pietro Pace",
            "description": "Stefano Bontade",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 4646416,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_4646416.jpg",
            "name": "Элена Пистильо",
            "enName": "Elena Pistillo",
            "description": "Suocera di Mattarella",
            "profession": "актеры",
            "enProfession": "actor"
        },
        {
            "id": 441526,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_441526.jpg",
            "name": "Марко Верба",
            "enName": "Marco Werba",
            "description": null,
            "profession": "композиторы",
            "enProfession": "composer"
        },
        {
            "id": 232474,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_232474.jpg",
            "name": "Аурелио Гримальди",
            "enName": "Aurelio Grimaldi",
            "description": null,
            "profession": "режиссеры",
            "enProfession": "director"
        },
        {
            "id": 5945946,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5945946.jpg",
            "name": "Даниэле Камайони",
            "enName": "Daniele Camaioni",
            "description": null,
            "profession": "монтажеры",
            "enProfession": "editor"
        },
        {
            "id": 2665007,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_2665007.jpg",
            "name": "Альфио Д’Агата",
            "enName": "Alfio D'Agata",
            "description": null,
            "profession": "операторы",
            "enProfession": "operator"
        },
        {
            "id": 5945945,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5945945.jpg",
            "name": "Федерика Фолли",
            "enName": "Federica Folli",
            "description": null,
            "profession": "продюсеры",
            "enProfession": "producer"
        },
        {
            "id": 232474,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_232474.jpg",
            "name": "Аурелио Гримальди",
            "enName": "Aurelio Grimaldi",
            "description": null,
            "profession": "продюсеры",
            "enProfession": "producer"
        },
        {
            "id": 223548,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_223548.jpg",
            "name": "Пит Магги",
            "enName": "Pete Maggi",
            "description": null,
            "profession": "продюсеры",
            "enProfession": "producer"
        },
        {
            "id": 15855,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_15855.jpg",
            "name": "Майкл Кауэн",
            "enName": "Michael Cowan",
            "description": null,
            "profession": "продюсеры",
            "enProfession": "producer"
        },
        {
            "id": 5341439,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5341439.jpg",
            "name": "Анатолий Нокс",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 2857076,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_2857076.jpg",
            "name": "Павел Дорофеев",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 277027,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_277027.jpg",
            "name": "Андрей Градов",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 5844744,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_5844744.jpg",
            "name": "Нана Саркисян",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 280829,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_280829.jpg",
            "name": "Юрий Маляров",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 315846,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_315846.jpg",
            "name": "Ирина Маликова",
            "enName": null,
            "description": null,
            "profession": "актеры дубляжа",
            "enProfession": "voice_actor"
        },
        {
            "id": 232474,
            "photo": "https://image.openmoviedb.com/kinopoisk-st-images//actor_iphone/iphone360_232474.jpg",
            "name": "Аурелио Гримальди",
            "enName": "Aurelio Grimaldi",
            "description": null,
            "profession": "сценаристы",
            "enProfession": "writer"
        }
    ],
    "premiere": {
        "country": null,
        "russia": null,
        "cinema": null,
        "bluray": null,
        "dvd": null,
        "digital": "2022-04-04T00:00:00.000Z",
        "world": "2020-07-02T00:00:00.000Z"
    },
    "watchability": {
        "items": [
            {
                "name": "Okko",
                "logo": {
                    "url": "https://avatars.mds.yandex.net/get-ott/239697/7713e586-17d1-42d1-ac62-53e9ef1e70c3/orig"
                },
                "url": "https://okko.tv/movie/il-delitto-mattarella?utm_medium=referral&utm_source=yandex_search&utm_campaign=new_search_feed"
            },
            {
                "name": "Иви",
                "logo": {
                    "url": "https://avatars.mds.yandex.net/get-ott/2419418/0dfd1724-848f-4725-9160-abc571f41c11/orig"
                },
                "url": "https://www.ivi.ru/watch/488091?utm_source=yandex&utm_medium=wizard"
            },
            {
                "name": "PREMIER",
                "logo": {
                    "url": "https://avatars.mds.yandex.net/get-ott/239697/0f86e907-9531-47e9-87bd-5101a08d4e30/orig"
                },
                "url": "https://premier.one/show/18900?utm_source=yandex&utm_medium=yandex_feed_search&utm_campaign=yandex_feed"
            },
            {
                "name": "Кино1ТВ",
                "logo": {
                    "url": "https://avatars.mds.yandex.net/get-ott/1672343/4e5f7a8e-d5ac-4904-9fc0-208753ccf520/orig"
                },
                "url": "https://kino.1tv.ru/serials/ubiystvo-po-italyanski?utm_source=yandex&utm_medium=wizard"
            },
            {
                "name": "Wink",
                "logo": {
                    "url": "https://avatars.mds.yandex.net/get-ott/1672343/54096cbe-cc3b-41c9-8e44-990ebbca8d61/orig"
                },
                "url": "https://wink.ru/media_items/140864695?utm_source=yandex&utm_medium=koldunschick&utm_content=name"
            },
            {
                "name": "Kinopoisk HD",
                "logo": {
                    "url": "https://yastatic.net/s3/kinopoisk-frontend/hd-www/release/apple-touch-icon-180x180.png"
                },
                "url": "https://hd.kinopoisk.ru/?rt=4b9259859d3436f9ae2d56e678cf18cf"
            }
        ]
    },
    "top10": null,
    "top250": null,
    "isSeries": false,
    "ticketsOnSale": false,
    "lists": [
        "hd"
    ],
    "networks": null,
    "createdAt": "2024-04-13T06:41:55.169Z",
    "updatedAt": "2024-11-07T01:00:38.769Z",
    "fees": {
        "world": {
            "value": 16653,
            "currency": "$"
        }
    },
    "videos": {
        "trailers": [
            {
                "url": "https://www.youtube.com/embed/rkueqY2DfGI",
                "name": "Убийство по-итальянски (2020). Смотреть онлайн русский трейлер к фильму",
                "site": "youtube",
                "type": "TRAILER"
            },
            {
                "url": "https://www.youtube.com/embed/rkueqY2DfGI",
                "name": "Убийство по-итальянски (2020). Смотреть онлайн русский трейлер к фильму",
                "site": "youtube",
                "type": "TRAILER"
            }
        ]
    },
    "logo": {
        "url": "https://image.openmoviedb.com/tmdb-images/original/lSgSaB7dsHRBwdHvZNdRBfaYtIH.png",
        "previewUrl": "https://image.openmoviedb.com/tmdb-images/w500/lSgSaB7dsHRBwdHvZNdRBfaYtIH.png"
    }
}

Из этого ответа нужно извлечь информацию о фильме, жанрах, странах и режиссере фильма и добавить их в бд с помощью репозиториев. Разумеется, при добавлении информации в таблицы жанров, стран и режиссеров нужно убедиться что в бд нет идентичных записей и в противном случае использовать существующие. Так же учти, что для моей таблицы фильмов нужен только 1 режиссер.
Так же учти, что для отпраляемые запроссы в API должны содержать заголовок X-API-KEY который равен "5A22ST9-VJV4T33-KRRWRGB-3HY6ZHT", {url} это "https://api.kinopoisk.dev"