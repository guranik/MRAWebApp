В моем проекте ASP.NET Core для веб-сайта должно использоваться 2 мастер-страницы: одна основная MainLayout, вторая - для навигации между разными списками фильмов MovieListsLayout. MainLayout должна быть на всех страницах, а MovieListsLayout используется только для страниц выбора списка фильмов:
MainLayout.cshtml:
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>Movie Review Aggregator</title>
    <style>
        .search-container {
            display: flex;
            align-items: center;
            margin-left: auto;
        }
        .search-input {
            margin-right: 10px;
        }
        body {
            margin: 0;
            padding: 0;
        }
        .navbar {
            position: fixed; /* Фиксируем навигационную панель */
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000; /* Устанавливаем высокий z-index, чтобы панель была поверх других элементов */
        }
        .content {
            margin-top: 60px; /* Отступ для контента, чтобы он не перекрывался навигационной панелью */
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="@Url.Action("Index", "Home")">Главная</a>
            <div class="search-container">
                <input type="text" class="form-control search-input" placeholder="Найти фильм" aria-label="Search">
                <button class="btn btn-outline-success" type="button">Войти</button>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody()
    </div>
</body>
</html>

MovieListsLayout.cshtml:

@{
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Movie Aggregator</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Genres")">Жанры</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Countries")">Страны</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Years")">Годы</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="@Url.Action("Index", "Directors")">Режиссеры</a>
                    </li>
                    <!-- Здесь можно добавить другие кнопки для других списков -->
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        @RenderBody() <!-- Здесь будет отображаться содержимое страницы -->
    </div>

Вот пример страницы списка Genres/Index.cshtml:

@model IEnumerable<ReviewAggregatorWebApp.Model.Genre>

@{
    Layout = "~/Views/Shared/MovieListsLayout.cshtml";
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<h1>Список жанров</h1>

<ul>
    @foreach (var genre in Model)
    {
        <li>
            <a href="@Url.Action("Filter", "MoviesList", new { filterType = "genre", filterValue = genre.Name })">
                @genre.Name
            </a>
        </li>
    }
</ul>

Вот пример страницы которая должна не использовать мастер страницу MainLayout MovieInfo/Details.cshtml:

@model ReviewAggregatorWebApp.Model.Movie
@{
    Layout = "~/Views/Shared/MainLayout.cshtml";
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
</head>
<h1>@Model.Name</h1>
<p>
    Режиссер:
    @if (Model.Director != null)
    {
        <a href="@Url.Action("Filter", "MoviesList", new { filterType = "director", filterValue = Model.Director.Name })">@Model.Director.Name</a>
    }
    else
    {
        <span>–</span>
    }
</p>
<p>Год премьеры: <a href="@Url.Action("Filter", "MoviesList", new { filterType = "year", filterValue = Model.ReleaseDate.Year })">@Model.ReleaseDate.Year</a></p>
<p>
    Страны:
    @foreach (var country in Model.Countries)
    {
        <a href="@Url.Action("Filter", "MoviesList", new { filterType = "country", filterValue = country.Name })">@country.Name</a>
        @if (country != Model.Countries.Last())
        {
            <span>, </span>
        }
    }
</p>
<p>
    Жанры:
    @foreach (var genre in Model.Genres)
    {
        <a href="@Url.Action("Filter", "MoviesList", new { filterType = "genre", filterValue = genre.Name })">@genre.Name</a>
        @if (genre != Model.Genres.Last())
        {
            <span>, </span>
        }
    }
</p>
<p>Рейтинг: @Model.Rating</p>
<p>Постер: <img src="@Model.PosterLink" alt="@Model.Name" /></p>


Так же, мастер-страница MainLayout должна быть всегда зафиксированна в верхней части страницы. Однако сейчас этого не происходит и мне кажется, все изза ошибок либо в самих файлах мастер-страниц, либо в том ка они используются в других cshtml файлах. Несмотря на то, что я предоставил конкретный код, он не реализует функционал зафиксированной основной панели, возможно изза использования вложенных мастер-страниц, а может еще что